set(CTEST_SOURCE_DIRECTORY "${DASHBOARD_SOURCE_DIRECTORY}/drake")
set(CTEST_BINARY_DIRECTORY "${DASHBOARD_BINARY_DIRECTORY}/drake")

notice("CTest Status: RUNNING CPPLINT")

# Switch the dashboard to the drake only dashboard
begin_stage(
  PROJECT_NAME "Drake"
  BUILD_NAME "${DASHBOARD_BUILD_NAME}-drake-cpplint")

# Now start the actual drake build
ctest_update(SOURCE "${CTEST_SOURCE_DIRECTORY}"
  CAPTURE_CMAKE_ERROR DASHBOARD_UPDATE_RETURN_VALUE QUIET)

ctest_read_custom_files("${CTEST_BINARY_DIRECTORY}")

set(CTEST_BUILD_COMMAND
  "${DASHBOARD_SOURCE_DIRECTORY}/drake/common/test/cpplint_wrapper.py")

set(CTEST_CUSTOM_MAXIMUM_NUMBER_OF_ERRORS 1000)
set(CTEST_CUSTOM_MAXIMUM_NUMBER_OF_WARNINGS 1000)

set(CTEST_CUSTOM_ERROR_MATCH
  "TOTAL [0-9]+ files checked, found [1-9][0-9]* warnings"
  ${CTEST_CUSTOM_ERROR_MATCH}
)

ctest_build(APPEND NUMBER_ERRORS DASHBOARD_NUMBER_BUILD_ERRORS
  NUMBER_WARNINGS DASHBOARD_NUMBER_BUILD_WARNINGS QUIET)
if(DASHBOARD_NUMBER_BUILD_ERRORS GREATER 0)
  append_step_status("CPPLINT" FAILURE)
endif()

# Submit the results
ctest_submit(RETRY_COUNT 4 RETRY_DELAY 15
  CAPTURE_CMAKE_ERROR DASHBOARD_SUBMIT_RETURN_VALUE QUIET)
